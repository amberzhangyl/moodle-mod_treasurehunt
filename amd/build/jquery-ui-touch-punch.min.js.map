{"version":3,"sources":["../src/jquery-ui-touch-punch.js"],"names":["factory","define","amd","jQuery","$","support","touch","document","mouseProto","ui","mouse","prototype","_mouseInit","_mouseDestroy","touchHandled","simulateMouseEvent","event","simulatedType","originalEvent","touches","length","preventDefault","changedTouches","simulatedEvent","createEvent","initMouseEvent","window","screenX","screenY","clientX","clientY","target","dispatchEvent","_touchStart","self","_mouseCapture","_touchMoved","_touchMove","_touchEnd","element","bind","touchstart","proxy","touchmove","touchend","call","unbind"],"mappings":"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","sourcesContent":["/*!\r\n * jQuery UI Touch Punch 0.2.3\r\n *\r\n * Copyright 2011â€“2014, Dave Furfero\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n *\r\n * Depends:\r\n *  jquery.ui.widget.js\r\n *  jquery.ui.mouse.js\r\n */\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['jquery','jqueryui'], factory);\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n\r\n  // Detect touch support\r\n  $.support.touch = 'ontouchend' in document;\r\n\r\n  // Ignore browsers without touch support\r\n  if (!$.support.touch) {\r\n    return;\r\n  }\r\n\r\n  var mouseProto = $.ui.mouse.prototype,\r\n      _mouseInit = mouseProto._mouseInit,\r\n      _mouseDestroy = mouseProto._mouseDestroy,\r\n      touchHandled;\r\n\r\n  /**\r\n   * Simulate a mouse event based on a corresponding touch event\r\n   * @param {Object} event A touch event\r\n   * @param {String} simulatedType The corresponding mouse event\r\n   */\r\n  function simulateMouseEvent (event, simulatedType) {\r\n\r\n    // Ignore multi-touch events\r\n    if (event.originalEvent.touches.length > 1) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    var touch = event.originalEvent.changedTouches[0],\r\n        simulatedEvent = document.createEvent('MouseEvents');\r\n    \r\n    // Initialize the simulated mouse event using the touch event's coordinates\r\n    simulatedEvent.initMouseEvent(\r\n      simulatedType,    // type\r\n      true,             // bubbles                    \r\n      true,             // cancelable                 \r\n      window,           // view                       \r\n      1,                // detail                     \r\n      touch.screenX,    // screenX                    \r\n      touch.screenY,    // screenY                    \r\n      touch.clientX,    // clientX                    \r\n      touch.clientY,    // clientY                    \r\n      false,            // ctrlKey                    \r\n      false,            // altKey                     \r\n      false,            // shiftKey                   \r\n      false,            // metaKey                    \r\n      0,                // button                     \r\n      null              // relatedTarget              \r\n    );\r\n\r\n    // Dispatch the simulated event to the target element\r\n    event.target.dispatchEvent(simulatedEvent);\r\n  }\r\n\r\n  /**\r\n   * Handle the jQuery UI widget's touchstart events\r\n   * @param {Object} event The widget element's touchstart event\r\n   */\r\n  mouseProto._touchStart = function (event) {\r\n\r\n    var self = this;\r\n\r\n    // Ignore the event if another widget is already being handled\r\n    if (touchHandled || !self._mouseCapture(event.originalEvent.changedTouches[0])) {\r\n      return;\r\n    }\r\n\r\n    // Set the flag to prevent other widgets from inheriting the touch event\r\n    touchHandled = true;\r\n\r\n    // Track movement to determine if interaction was a click\r\n    self._touchMoved = false;\r\n\r\n    // Simulate the mouseover event\r\n    simulateMouseEvent(event, 'mouseover');\r\n\r\n    // Simulate the mousemove event\r\n    simulateMouseEvent(event, 'mousemove');\r\n\r\n    // Simulate the mousedown event\r\n    simulateMouseEvent(event, 'mousedown');\r\n  };\r\n\r\n  /**\r\n   * Handle the jQuery UI widget's touchmove events\r\n   * @param {Object} event The document's touchmove event\r\n   */\r\n  mouseProto._touchMove = function (event) {\r\n\r\n    // Ignore event if not handled\r\n    if (!touchHandled) {\r\n      return;\r\n    }\r\n\r\n    // Interaction was not a click\r\n    this._touchMoved = true;\r\n\r\n    // Simulate the mousemove event\r\n    simulateMouseEvent(event, 'mousemove');\r\n  };\r\n\r\n  /**\r\n   * Handle the jQuery UI widget's touchend events\r\n   * @param {Object} event The document's touchend event\r\n   */\r\n  mouseProto._touchEnd = function (event) {\r\n\r\n    // Ignore event if not handled\r\n    if (!touchHandled) {\r\n      return;\r\n    }\r\n\r\n    // Simulate the mouseup event\r\n    simulateMouseEvent(event, 'mouseup');\r\n\r\n    // Simulate the mouseout event\r\n    simulateMouseEvent(event, 'mouseout');\r\n\r\n    // If the touch interaction did not move, it should trigger a click\r\n    if (!this._touchMoved) {\r\n\r\n      // Simulate the click event\r\n      simulateMouseEvent(event, 'click');\r\n    }\r\n\r\n    // Unset the flag to allow other widgets to inherit the touch event\r\n    touchHandled = false;\r\n  };\r\n\r\n  /**\r\n   * A duck punch of the $.ui.mouse _mouseInit method to support touch events.\r\n   * This method extends the widget with bound touch event handlers that\r\n   * translate touch events to mouse events and pass them to the widget's\r\n   * original mouse event handling methods.\r\n   */\r\n  mouseProto._mouseInit = function () {\r\n    \r\n    var self = this;\r\n\r\n    // Delegate the touch handlers to the widget's element\r\n    self.element.bind({\r\n      touchstart: $.proxy(self, '_touchStart'),\r\n      touchmove: $.proxy(self, '_touchMove'),\r\n      touchend: $.proxy(self, '_touchEnd')\r\n    });\r\n\r\n    // Call the original $.ui.mouse init method\r\n    _mouseInit.call(self);\r\n  };\r\n\r\n  /**\r\n   * Remove the touch event handlers\r\n   */\r\n  mouseProto._mouseDestroy = function () {\r\n    \r\n    var self = this;\r\n\r\n    // Delegate the touch handlers to the widget's element\r\n    self.element.unbind({\r\n      touchstart: $.proxy(self, '_touchStart'),\r\n      touchmove: $.proxy(self, '_touchMove'),\r\n      touchend: $.proxy(self, '_touchEnd')\r\n    });\r\n\r\n    // Call the original $.ui.mouse destroy method\r\n    _mouseDestroy.call(self);\r\n  };\r\n\r\n}));"],"file":"jquery-ui-touch-punch.min.js"}