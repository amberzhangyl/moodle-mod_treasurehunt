{"version":3,"sources":["../src/jquery.truncate.js"],"names":["define","$","chop","start","truncate","html","options","append","fn","isNumeric","length","o","extend","defaults","each","self","noBreaks","find","replaceWith","text","excess","stripTags","words","truncated","slice","replace","keepFirstWord","exec","contents","get","reverse","i","el","$el","remove","nodeType","finishBlock","splitText","ellipsis"],"mappings":"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","sourcesContent":["define(['jquery'], function($) {\r\n\r\n  // Matches trailing non-space characters.\r\n  var chop = /(\\s*\\S+|\\s)$/;\r\n\r\n  // Matches the first word in the string.\r\n  var start = /^(\\S*)/;\r\n\r\n  // Return a truncated html string.  Delegates to $.fn.truncate.\r\n  $.truncate = function(html, options) {\r\n    return $('<div></div>').append(html).truncate(options).html();\r\n  };\r\n\r\n  // Truncate the contents of an element in place.\r\n  $.fn.truncate = function(options) {\r\n    if ($.isNumeric(options)) options = {length: options};\r\n    var o = $.extend({}, $.truncate.defaults, options);\r\n\r\n    return this.each(function() {\r\n      var self = $(this);\r\n\r\n      if (o.noBreaks) self.find('br').replaceWith(' ');\r\n\r\n      var text = self.text();\r\n      var excess = text.length - o.length;\r\n\r\n      if (o.stripTags) self.text(text);\r\n\r\n      // Chop off any partial words if appropriate.\r\n      if (o.words && excess > 0) {\r\n        var truncated = text.slice(0, o.length).replace(chop, '').length;\r\n\r\n        if (o.keepFirstWord && truncated === 0) {\r\n          excess = text.length - start.exec(text)[0].length - 1;\r\n        } else {\r\n          excess = text.length - truncated - 1;\r\n        }\r\n      }\r\n\r\n      if (excess < 0 || !excess && !o.truncated) return;\r\n\r\n      // Iterate over each child node in reverse, removing excess text.\r\n      $.each(self.contents().get().reverse(), function(i, el) {\r\n        var $el = $(el);\r\n        var text = $el.text();\r\n        var length = text.length;\r\n\r\n        // If the text is longer than the excess, remove the node and continue.\r\n        if (length <= excess) {\r\n          o.truncated = true;\r\n          excess -= length;\r\n          $el.remove();\r\n          return;\r\n        }\r\n\r\n        // Remove the excess text and append the ellipsis.\r\n        if (el.nodeType === 3) {\r\n          // should we finish the block anyway?\r\n          if (o.finishBlock) {\r\n            $(el.splitText(length)).replaceWith(o.ellipsis);\r\n          } else {\r\n            $(el.splitText(length - excess - 1)).replaceWith(o.ellipsis);\r\n          }\r\n          return false;\r\n        }\r\n\r\n        // Recursively truncate child nodes.\r\n        $el.truncate($.extend(o, {length: length - excess}));\r\n        return false;\r\n      });\r\n    });\r\n  };\r\n\r\n  $.truncate.defaults = {\r\n\r\n    // Strip all html elements, leaving only plain text.\r\n    stripTags: false,\r\n\r\n    // Only truncate at word boundaries.\r\n    words: false,\r\n\r\n    // When 'words' is active, keeps the first word in the string\r\n    // even if it's longer than a target length.\r\n    keepFirstWord: false,\r\n\r\n    // Replace instances of <br> with a single space.\r\n    noBreaks: false,\r\n\r\n    // if true always truncate the content at the end of the block.\r\n    finishBlock: false,\r\n\r\n    // The maximum length of the truncated html.\r\n    length: Infinity,\r\n\r\n    // The character to use as the ellipsis.  The word joiner (U+2060) can be\r\n    // used to prevent a hanging ellipsis, but displays incorrectly in Chrome\r\n    // on Windows 7.\r\n    // http://code.google.com/p/chromium/issues/detail?id=68323\r\n    ellipsis: '\\u2026' // '\\u2060\\u2026'\r\n\r\n  };\r\n\r\n});"],"file":"jquery.truncate.min.js"}